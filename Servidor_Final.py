# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'listar_dados.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTimer
import socket
from threading import *
import datetime
import time

serversocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
host = "Colocar ip do servidor aqui"
port = 8000
print (host)
print (port)
serversocket.bind((host, port))


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(561, 555)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(0, 0, 16777215, 16777215))
        self.tableWidget.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.tableWidget.setFont(font)
        self.tableWidget.setAutoFillBackground(False)
        self.tableWidget.setStyleSheet("background-color: rgb(184, 184, 184);")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(3)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(180)
        MainWindow.setCentralWidget(self.centralwidget)


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Funcion√°rio"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Atividade"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Tempo nesta Atividade"))

    def listar(self):
        
        arquivo = open('arq.txt','a')
        arquivo2 = open('banco.txt','a')
        arquivo.close()
        arquivo2.close()
        arquivo = open('arq.txt','r')
        arquivo2 = open('banco.txt','r')
        cont = 0
        for linha in arquivo:
            cont = cont+1
        arquivo.seek(0)
        self.tableWidget.setRowCount(0)
        linhas = arquivo.readlines()
        self.tableWidget.setRowCount(cont)
        self.tableWidget.setColumnCount(3)
        j = 0
        for linha in linhas:
            array = linha.split()
            for i in range(0,2):
                self.tableWidget.setItem(j,i,QtWidgets.QTableWidgetItem(str(array[i])))
            
            data = str(array[2])
            t_inicio = datetime.datetime.strptime(data, '%H:%M:%S')
            atual = datetime.datetime.now()
            atual = str(atual)
            atual = atual[11:19]
            t_atual = datetime.datetime.strptime(atual, '%H:%M:%S')
            delta = t_atual - t_inicio
            
            self.tableWidget.setItem(j,2,QtWidgets.QTableWidgetItem(str(delta)))
            j = j+1
            
                
        arquivo.close()
        arquivo2.close()

        self.timer = QTimer()
        self.timer.setSingleShot(True)
        self.timer.timeout.connect(self.listar)
        self.timer.start(1000)



class client(Thread):
    def __init__(self, socket, address):
        Thread.__init__(self)
        self.sock = socket
        self.addr = address
        self.start()

    def run(self):
        while 1:
            mensagem = self.sock.recv(1024).decode()
            self.sock.send(b'ACK')
            if mensagem != "1":
                print('Client sent:', mensagem)
                frase = mensagem.split()
                arquivo = open('arq.txt','a')
                arquivo2 = open('banco.txt','a')
                arquivo.close()
                arquivo2.close()
                existe = 0
                existe2 = 0
                ativ_atual = ""
                fun_atual = ""
                arquivo = open('arq.txt','r')
                arquivo2 = open('banco.txt','r')
                linhas = arquivo.readlines()
                linhas2 = arquivo2.readlines()
                for linha in linhas:
                    array = linha.split()
                    if (frase[0] == array[0]):
                        fun_atual = array[0]
                        ativ_atual = array[1]
                        existe = 1
                for linha in linhas2:
                    array = linha.split()
                    if ((frase[0] == array[0]) and (frase[1]==array[1])):
                        existe2 = 1
                arquivo.close()
                arquivo2.close()
                if ((existe == 1)and(existe2 !=1)):
                    arquivo = open('arq.txt','w')

                    arquivo2 = open('banco.txt','w')
                    for linha in linhas2:
                        array = linha.split()
                        if ((array[0] != fun_atual) or (array[1] != ativ_atual)):
                            arquivo2.write(linha)
                        else:        
                            arquivo2.write(array[0])
                            arquivo2.write("\t")
                            arquivo2.write(array[1])
                            arquivo2.write("\t")
                            arquivo2.write(array[2])
                            arquivo2.write("\t")
                            
                            data = str(array[2])
                            t_inicio = datetime.datetime.strptime(data, '%H:%M:%S')

                            atual = datetime.datetime.now()
                            atual = str(atual)
                            atual = atual[11:19]
                            t_atual = datetime.datetime.strptime(atual, '%H:%M:%S')
                            delta = t_atual - t_inicio
                            
                            arquivo2.write(str(delta)+"\n")
                            
                        
                    arquivo2.close()
                        

                    
                    arquivo2 = open('banco.txt','a')
                    for linha in linhas:
                        array = linha.split()
                        if (frase[0] != array[0]):
                            arquivo.write(linha)
                        else:        
                            for palavra in frase:        
                                arquivo.write(palavra)
                                arquivo2.write(palavra)
                                arquivo.write("\t")
                                arquivo2.write("\t")
                            
                            arquivo.write("\n")
                            arquivo2.write("\n")
                            
                    arquivo.close()
                    arquivo2.close()

                    arquivo = open('arq.txt','r')
                    cont = 0
                    for linha in arquivo:
                        cont = cont+1
                    arquivo.seek(0)
                    ui.tableWidget.setRowCount(0)
                    linhas = arquivo.readlines()
                    ui.tableWidget.setRowCount(cont)
                    ui.tableWidget.setColumnCount(3)
                    j = 0
                    for linha in linhas:
                        array = linha.split()
                        for i in range(0,2):
                            ui.tableWidget.setItem(j,i,QtWidgets.QTableWidgetItem(str(array[i])))
                        
                        data = str(array[2])
                        t_inicio = datetime.datetime.strptime(data, '%H:%M:%S')

                        atual = datetime.datetime.now()
                        atual = str(atual)
                        atual = atual[11:19]
                        t_atual = datetime.datetime.strptime(atual, '%H:%M:%S')
                        delta = t_atual - t_inicio
                        ui.tableWidget.setItem(j,2,QtWidgets.QTableWidgetItem(str(delta)))
                        j = j+1
            
                        
                    arquivo.close()



                elif ((existe == 1)and(existe2 ==1)):

                    arquivo2 = open('banco.txt','w')
                    for linha in linhas2:
                        array = linha.split()
                        if ((array[0] != fun_atual) or (array[1] != ativ_atual)):
                            arquivo2.write(linha)
                        else:        
                            arquivo2.write(array[0])
                            arquivo2.write("\t")
                            arquivo2.write(array[1])
                            arquivo2.write("\t")
                            arquivo2.write(array[2])
                            arquivo2.write("\t")
                            
                            data = str(array[2])
                            t_inicio = datetime.datetime.strptime(data, '%H:%M:%S')

                            atual = datetime.datetime.now()
                            atual = str(atual)
                            atual = atual[11:19]
                            t_atual = datetime.datetime.strptime(atual, '%H:%M:%S')
                            delta = t_atual - t_inicio
                            
                            arquivo2.write(str(delta)+"\n")
                            
                        
                    arquivo2.close()

                    for linha in linhas2:
                        array = linha.split()
                        if ((frase[0] == array[0]) and (frase[1]==array[1])):
                            delta_acum = array[3]
                            d_acum = datetime.datetime.strptime(delta_acum, '%H:%M:%S')
                            atual = datetime.datetime.now()
                            atual = str(atual)
                            atual = atual[11:19]
                            atual = datetime.datetime.strptime(atual, '%H:%M:%S')
                            ac = atual-d_acum
                            
                    
                    arquivo = open('arq.txt','w')
                    for linha in linhas:
                        array = linha.split()

                        
                        if (frase[0] != array[0]):
                            arquivo.write(linha)
                        else:               
                            arquivo.write(frase[0])
                            arquivo.write("\t")
                            arquivo.write(frase[1])
                            arquivo.write("\t")
                            arquivo.write(str(ac))
                            arquivo.write("\t")
                            
                            arquivo.write("\n")
                    arquivo.close()

                    arquivo = open('arq.txt','r')
                    cont = 0
                    for linha in arquivo:
                        cont = cont+1
                    arquivo.seek(0)
                    ui.tableWidget.setRowCount(0)
                    linhas = arquivo.readlines()
                    ui.tableWidget.setRowCount(cont)
                    ui.tableWidget.setColumnCount(3)
                    j = 0
                    for linha in linhas:
                        array = linha.split()
                        for i in range(0,2):
                            ui.tableWidget.setItem(j,i,QtWidgets.QTableWidgetItem(str(array[i])))

                        atual = datetime.datetime.now()
                        atual = str(atual)
                        atual = atual[11:19]
                        atual = datetime.datetime.strptime(atual, '%H:%M:%S')
                        gg = atual - d_acum

                        
                        delta = atual - gg
                        ui.tableWidget.setItem(j,2,QtWidgets.QTableWidgetItem(str(delta)))
                        j = j+1
            
                        
                    arquivo.close()
                    
                    


                    
                    
                elif (existe == 0):

                    arquivo2 = open('banco.txt','w')
                    for linha in linhas2:
                        array = linha.split()
                        if ((array[0] != fun_atual) or (array[1] != ativ_atual)):
                            arquivo2.write(linha)
                        else:        
                            arquivo2.write(array[0])
                            arquivo2.write("\t")
                            arquivo2.write(array[1])
                            arquivo2.write("\t")
                            arquivo2.write(array[2])
                            arquivo2.write("\t")
                            
                            data = str(array[2])
                            t_inicio = datetime.datetime.strptime(data, '%H:%M:%S')

                            atual = datetime.datetime.now()
                            atual = str(atual)
                            atual = atual[11:19]
                            t_atual = datetime.datetime.strptime(atual, '%H:%M:%S')
                            delta = t_atual - t_inicio
                            
                            arquivo2.write(str(delta)+"\n")
                            
                        
                    arquivo2.close()
                    
                    arquivo = open('arq.txt','a')
                    arquivo2 = open('banco.txt','a')
                    for palavra in frase:        
                        arquivo.write(palavra)
                        arquivo2.write(palavra)
                        arquivo.write("\t")
                        arquivo2.write("\t")
                    arquivo.write("\n")
                    arquivo2.write("\n")
                    arquivo.close()
                    arquivo2.close()

                    arquivo = open('arq.txt','r')
                    cont = 0
                    for linha in arquivo:
                        cont = cont+1
                    arquivo.seek(0)
                    ui.tableWidget.setRowCount(0)
                    linhas = arquivo.readlines()
                    ui.tableWidget.setRowCount(cont)
                    ui.tableWidget.setColumnCount(3)
                    j = 0
                    for linha in linhas:
                        array = linha.split()
                        for i in range(0,2):
                            ui.tableWidget.setItem(j,i,QtWidgets.QTableWidgetItem(str(array[i])))
                        
                        
                        data = str(array[2])
                        t_inicio = datetime.datetime.strptime(data, '%H:%M:%S')

                        atual = datetime.datetime.now()
                        atual = str(atual)
                        atual = atual[11:19]
                        t_atual = datetime.datetime.strptime(atual, '%H:%M:%S')
                        delta = t_atual - t_inicio
                        ui.tableWidget.setItem(j,2,QtWidgets.QTableWidgetItem(str(delta)))

                        j = j+1
            
                        
                    arquivo.close()
                    

                        
            else:
                arquivo = open('arq.txt','a')
                arquivo.close()
                print("Mensagem Vazia")

            
            
                    
            


serversocket.listen(5)
print ('server started and listening')
    
while 1:
    clientsocket, address = serversocket.accept()
    client(clientsocket, address)
        
    if __name__ == "__main__":
        import sys

        app = QtWidgets.QApplication(sys.argv)
        MainWindow = QtWidgets.QMainWindow()
        ui = Ui_MainWindow()
        ui.setupUi(MainWindow)
        ui.listar()
        MainWindow.show()
        sys.exit(app.exec_())

    
        
    

    
        
